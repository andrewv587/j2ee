package com.hwh.test;

import java.nio.file.Paths;

import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.document.StringField;
import org.apache.lucene.document.TextField;
import org.apache.lucene.index.DirectoryReader;
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.queryparser.classic.QueryParser;
import org.apache.lucene.search.IndexSearcher;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.ScoreDoc;
import org.apache.lucene.search.TopDocs;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.FSDirectory;
import org.junit.Test;

import com.hwh.model.Article;

/**
 * 对Lucene进行测试
 * 
 * @author andrew
 * 
 */

public class HelloWorldTest {
	
	private static Analyzer analyzer = new StandardAnalyzer();

	@Test
	public void createIndex () throws Exception {
		// create context
		Article article = new Article();
		article.setId(1);
		article.setName("检索 ");
		article.setContext("这里我们采用了全文检索，检索内容无所谓，能用就行");

		// context --> document
		Document doc = new Document();
		doc.add(new StringField("id", String.valueOf(article.getId()),
				Field.Store.YES));
		doc.add(new StringField("name", article.getName(), Field.Store.YES));
		doc.add(new TextField("context", article.getContext(),
				Field.Store.YES));
		
		//indexWrite add document
		Directory dir=FSDirectory.open(Paths.get("./index"));
		//Directory dir = new RAMDirectory(); 可保存在内存中
		IndexWriterConfig iwc = new IndexWriterConfig(analyzer);
		IndexWriter iw = new IndexWriter(dir, iwc);
		
		
		
		iw.addDocument(doc);
		iw.commit();
		iw.close();
		
	}

	@Test
	public void search() throws Exception  {
		//query
	    String querystr = "检索";
	    Query query = new QueryParser( "context", analyzer).parse(querystr);
	    
	    //searcher
	    Directory dir=FSDirectory.open(Paths.get("./index"));
	    IndexReader reader = DirectoryReader.open(dir);
	    IndexSearcher searcher = new IndexSearcher(reader);
	    
	    //index
	    TopDocs topDoc =searcher.search(query, 10);
	    ScoreDoc[] docs=topDoc.scoreDocs;
	    
	    //get document --> article
	    System.out.println("Found " + topDoc.totalHits+ " hits.");
	    for(int i=0;i<topDoc.totalHits;++i) {
	      int docId = docs[i].doc;
	      Document doc = searcher.doc(docId);
	      Article article = new Article();
	      article.setId(Integer.parseInt(doc.get("id")));
	      article.setName(doc.get("name"));
	      article.setContext(doc.get("context"));
	      System.out.println(article);
	    }
	 
	    
	   
	}
}
