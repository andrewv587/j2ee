<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	
 	<!-- Spring MVC配置 -->
    <context:annotation-config /> 
	<!-- 开启aop，对类代理 -->
	<aop:config proxy-target-class="true"></aop:config>
	<!-- 开启shiro注解支持 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	<!-- 配置自定扫描的包 -->
	<context:component-scan base-package="com.hwh" use-default-filters="false">
		 <context:include-filter type="annotation"
                expression="org.springframework.stereotype.Controller"/>
         <context:include-filter type="annotation"
                expression="org.springframework.web.bind.annotation.ControllerAdvice"/> 
	</context:component-scan>
	
	<!-- spring会用默认的Servlet来响应静态文件 -->
	 <mvc:default-servlet-handler/>  
	 
	<!-- 把images/**映射到ResourceHttpRequestHandler进行处理 -->
	<mvc:resources mapping="js/**" location="js/"/>  
    <mvc:resources mapping="css/**" location="css/"/>  
    <mvc:resources mapping="images/**" location="images/"/> 
    <mvc:resources mapping="easyui/**" location="easyui/"/> 
    <mvc:resources mapping="index.html" location="index.html"/> 
 	<!-- 在实际开发中通常都需配置 mvc:annotation-driven 标签 -->
 	<!-- 支持注解的handlerMapping\adpater\exceptionResolver等 -->
 	<!-- 支持@conversionService和校验的注
 	 -->
 	<!-- 使得在配置view-controller时handlerMapping也能起作用 -->
	<mvc:annotation-driven></mvc:annotation-driven> 
<!-- 	<mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>	 -->
	
	<!-- 配置 ConversionService -->
<!-- 	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<ref bean="employeeConverter"/>
			</set>
		</property>	
	</bean> -->

	<!-- 配置视图解析器: 如何把 handler 方法返回值解析为实际的物理视图 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/view/" />
		<property name="suffix" value=".jsp" />
		<!-- <property name="order" value="20"></property>  -->
	</bean>

	<!-- 配置视图 BeanNameViewResolver 解析器: 使用视图的名字来解析视图 -->
	<!-- 通过 order 属性来定义视图解析器的优先级, order 值越小优先级越高 -->
	<!-- 不定义默认为最大值 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"> 
		<property name="order" value="100"></property> 
	</bean>

	<!-- 配置国际化资源文件 -->
	<!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"> 
		<property name="basename" value="i18n"></property>
	</bean> -->

	<!-- 定义统一异常处理器 -->
	<bean class="com.hwh.exception.CustomExceptionResolver"></bean>

	<!-- 配置直接转发的页面 -->
	<!-- 可以直接相应转发的页面, 而无需再经过 Handler 的方法. -->
	<!-- <mvc:view-controller path="/log/login" view-name="login"/> -->
	<mvc:view-controller path="/test" view-name="index1"/>
</beans>
